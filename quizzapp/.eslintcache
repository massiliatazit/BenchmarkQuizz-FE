[{"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\index.js":"1","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\App.js":"2","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\reportWebVitals.js":"3","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\QuestionPage\\Questions.jsx":"4","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\StartPage\\StartPage.jsx":"5","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\QuestionPage\\QuestionPage.jsx":"6","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\scoreboard\\Scoreboard.jsx":"7","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\Scoreboard\\Scoreboard.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":893,"mtime":1610117659472,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2406,"mtime":1610118252172,"results":"13","hashOfConfig":"10"},{"size":2164,"mtime":1610116100815,"results":"14","hashOfConfig":"10"},{"size":1173,"mtime":1610118451383,"results":"15","hashOfConfig":"10"},{"size":900,"mtime":1610118229469,"results":"16","hashOfConfig":"10"},{"size":900,"mtime":1610118229469,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"axa9tu",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\index.js",[],["37","38"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\App.js",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\reportWebVitals.js",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\QuestionPage\\Questions.jsx",["39"],"import React from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  ProgressBar,\r\n} from \"react-bootstrap\";\r\n\r\nclass Questions extends React.Component {\r\n  state = {\r\n    question: this.props.question,\r\n    answer: {\r\n      question: this.props.index,\r\n      answer: 5,\r\n    },\r\n    isSelected: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.timer();\r\n  };\r\n\r\n  componentDidUpdate = (prevState, prevProps) => {\r\n    if (prevProps.question !== this.props.question) {\r\n      this.timer();\r\n    }\r\n  };\r\n\r\n  timer = () => {\r\n    setTimeout(() => {\r\n      this.props.nextQuestion();\r\n    }, this.props.question.duration * 1000);\r\n  };\r\n\r\n  submitAnswer = (e) => {\r\n    e.preventDefault();\r\n    this.sendAnswer();\r\n    this.setState({ isSelected: false });\r\n    this.props.nextQuestion();\r\n  };\r\n\r\n  sendAnswer = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        `http://localhost:5001/exams/${this.props.examID}/answer`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(this.state.answer),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      let res = response.body;\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {console.log(this.props.question)}\r\n        <Row>{this.props.question.text}</Row>\r\n\r\n        <Row>\r\n          <Form onSubmit={this.submitAnswer}>\r\n            <Form.Group as={Row}>\r\n              {this.props.question.answers.map((answer, index) => (\r\n                <Col xs={6} key={index}>\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    name=\"answerChecks\"\r\n                    id={index}\r\n                    label={answer.text}\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        answer: {\r\n                          question: this.props.index,\r\n                          answer: index,\r\n                        },\r\n                        isSelected: true,\r\n                      })\r\n                    }\r\n                  />\r\n                </Col>\r\n              ))}\r\n            </Form.Group>\r\n            {this.state.isSelected && <Button type=\"submit\">NEXT</Button>}\r\n          </Form>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Questions;\r\n","C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\StartPage\\StartPage.jsx",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\QuestionPage\\QuestionPage.jsx",[],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\scoreboard\\Scoreboard.jsx",[],["40","41"],"C:\\Users\\massy\\OneDrive\\Documents\\GitHub\\BenchmarkQuizz-FE\\quizzapp\\src\\components\\Scoreboard\\Scoreboard.jsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":8,"column":3,"nodeType":"48","messageId":"49","endLine":8,"endColumn":14},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'ProgressBar' is defined but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]